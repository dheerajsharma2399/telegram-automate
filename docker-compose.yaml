# Source code deployment with external database connection to existing Supabase
version: '3.8'

services:
  telegram-job-scraper:
    build: .  # Build from source code instead of using Docker image
    container_name: telegram-job-scraper
    restart: unless-stopped
    command: bash -c "python web_server.py & python main.py & wait"
    environment:
      # Container Configuration
      - CONTAINER_TYPE=all
      - BOT_RUN_MODE=webhook
      
      # Web Server Configuration
      - PORT=9501
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      
      # External Database Configuration (connects to user's existing Supabase)
      - DATABASE_TYPE=postgresql
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:dash1234@152.67.7.111:5432/postgres}
      
      # All other environment variables
      - TELEGRAM_API_ID=${TELEGRAM_API_ID}
      - TELEGRAM_API_HASH=${TELEGRAM_API_HASH}
      - TELEGRAM_PHONE=${TELEGRAM_PHONE}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_GROUP_USERNAMES=${TELEGRAM_GROUP_USERNAMES}
      - AUTHORIZED_USER_IDS=${AUTHORIZED_USER_IDS}
      - ADMIN_USER_ID=${ADMIN_USER_ID}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-anthropic/claude-3.5-sonnet}
      - OPENROUTER_FALLBACK_MODEL=${OPENROUTER_FALLBACK_MODEL:-openai/gpt-4o-mini}
      - BATCH_SIZE=10
      - PROCESSING_INTERVAL_MINUTES=5
      - MAX_RETRIES=3
      - GOOGLE_CREDENTIALS_JSON=${GOOGLE_CREDENTIALS_JSON}
      - SPREADSHEET_ID=${SPREADSHEET_ID}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    ports:
      - "9501:9501"
    networks:
      - telegram_scraper_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

networks:
  telegram_scraper_network:
    driver: bridge